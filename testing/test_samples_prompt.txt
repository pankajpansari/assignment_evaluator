You are tasked with modifying a C program that was written to solve the following problem:

<program_task>
{C_PROGRAM_TASK}
</program_task>

The original program is provided below:

<original_program>
{C_PROGRAM}
</original_program>

Your task is to modify this program so that it still functions correctly, but degrades its quality in terms of cleanliness, readability, efficiency, adherence to language conventions, memory management, and/or overall design. The purpose is to create a version of the program that will challenge human evaluators in identifying and annotating code issues.

Consider the following parameters when modifying the code:
1. Cleanliness and readability
2. Efficiency
3. Language conventions
4. Memory management
5. Overall design

You should aim to degrade the code quality in at least a subset of these parameters, if not all of them. Here are some suggestions for how you might modify the code:

1. Remove or reduce meaningful comments
2. Use cryptic variable names
3. Introduce unnecessary global variables
4. Use goto statements instead of structured programming constructs
5. Nest conditionals and loops excessively
6. Use magic numbers instead of named constants
7. Introduce redundant or inefficient operations
8. Violate typical C coding conventions
9. Use manual memory management instead of standard library functions
10. Combine multiple operations into single, complex expressions

When modifying the code, ensure that the core functionality remains intact.

After you have modified the code, provide your output in the following format:

<modified_program>
[Insert your modified C program here]
</modified_program>

<explanation>
[Provide a brief explanation of the changes you made and how they affect the code quality in terms of the parameters mentioned above]
</explanation>

Remember, the goal is to create a program that functions correctly but presents challenges in terms of code quality and maintainability.